<svg xmlns="http://www.w3.org/2000/svg" width="100%"
xmlns:xlink="http://www.w3.org/1999/xlink" onload="start(evt)"
>
<script>
    <![CDATA[
xmlns="http://www.w3.org/2000/svg"
xlink="http://www.w3.org/1999/xlink" 
var Root=document.documentElement
var I
var w
var h
var GP
var Screen
var count=0
var S=new Array(84, 4, 94, 2, 17, 34, 98, 18, 45, 95, 55, 72, 99)
var left=[0,270,540,270]
function start(evt){
 var src=[84,99,95,55]
 for (var i=0;i<3;i++){
  buildPaths(left[i] - 25,src[i])
 }
 var R=document.getElementById("IPP")
 w=parseInt(R.getAttribute("width"))
 h=parseInt(R.getAttribute("height"))
 Root.setAttribute("onmousemove","intercept(evt,w,h)")
 Screen=getRect()
}
function rotate(evt){
 var IS=evt.currentTarget.getElementsByTagName("image")
 for (i=0;i<IS.length;i++){
  IS.item(i).setAttributeNS(xlink,"xlink:href","p"+S[count%S.length]+".jpg")
 }
 count++
}
function intercept(evt,w,h){
 GP=document.getElementsByTagName("g")
 for (var i=0;i<GP.length;i++){
  var ax
  var x=Math.ceil(evt.clientX)
  var y=Math.ceil(evt.clientY)
  l=left[i]
  I=GP.item(i).getElementsByTagName("image")
  var ax=Math.ceil(w*x/Screen.x)
  var ay=Math.ceil(h*y/Screen.y+100)
  move(ax,ay,I,l,w,h)
 }
}
 
function getRect(){
 rect={x: window.innerWidth,y:window.innerHeight}
 return rect
}
function move(x,y,I,lft,w,h){
//x is between 0 and w ; y is between 100 and h
 y1=100
 xm=lft+w/2
 x2=lft+w
 ym=100+h/2
 y2=100+h
//triangle 1
  a=2*x/w
  b=(2*y - 2*ym)/(w)
  M=a+" "+b+" 0 1 "+lft*(1-a)+" "+(-b)*lft
  I.item(0).setAttribute("transform", "matrix("+M+")")
//triangle 2
  d=(2*y - 200)/h
  c=(2*x - w)/(h)
  M="1 0 "+c+" "+d+" "+y1*(-c)+" "+y1*(1 - d)
  I.item(1).setAttribute("transform", "matrix("+M+")")
//triangle 3
  //a=(600 - 2*x)/w
  a=(2*w - 2*x)/w
  b=(2*ym - 2*y)/(w)
  M=a+" "+b+" 0 1 "+(x2)*(1-a)+" "+(-b)*(x2)
  I.item(2).setAttribute("transform", "matrix("+M+")")
//triangle 4
  d=(2*y2 - 2*y)/h
  c=(w - 2*x)/h
  M="1 0 "+c+" "+d +" "+y2*(-c)+" "+y2 *(1-d)
  I.item(3).setAttribute("transform", "matrix("+M+")")
 
}
function buildPaths(t,n){
 G=document.createElementNS(xmlns,"g")
 G.setAttributeNS(null, "id","G"+n)
 G.setAttributeNS(null, "onclick","rotate(evt)")
 var R=document.getElementById("IPP")
 var x1=parseInt(R.getAttribute("x"))
 w=parseInt(R.getAttribute("width"))
 var x2=x1+w
 var mx=Math.ceil((x1+x2)/2)
 var y1=parseInt(R.getAttribute("y"))
 var y2=y1+parseInt(R.getAttribute("height"))
 var my=Math.ceil((y1+y2)/2)
 var path="image/"
 var p=new Array(6)
 p[0]=[x1,y1,x1,y2]
 p[1]=[x1,y1,x2,y1]
 p[2]=[x2,y1,x2,y2]
 p[3]=[x1,y2,x2,y2]
 for (var i=0;i<4;i++){
  var P=document.createElementNS(xmlns,"path")
  var d="M "+p[i][0]+" "+p[i][1]+" "+p[i][2]+" "+p[i][3]+" "+mx+" "+my+" z"
  P.setAttributeNS(null,"d",d)
  var DEF=document.getElementById("DEF")
  P.setAttributeNS(null,"id","P"+(i+1))
  DEF.appendChild(P)
  var NCP=document.getElementById("CPP").cloneNode("true")
  NCP.setAttribute("id","Q"+G.id+(i+1))
  Root.appendChild(NCP)
  NCP.firstChild.setAttribute("transform","translate("+t+","+0+")")
  NCP.firstChild.setAttributeNS(xlink,"xlink:href","#P"+(i+1))
  var IM=R.cloneNode("true")
  IM.setAttribute("clip-path","url(#Q"+G.id+(i+1)+")")
  IM.setAttribute("x",t+25)
  IM.setAttributeNS(xlink,"xlink:href",path+"p"+n+".jpg")
  G.appendChild(IM)
 }
 Root.appendChild(G)
}
//]]>
</script>
<defs id="DEF">
 <clipPath id="CPP"><use xlink:href="#P1"/></clipPath>
 <image id="IPP" xlink:href="p45.jpg" clip-path="url(#CP1)" preserveAspectRatio="none"
  width="260" height="340" x="25" y="100" />
 <rect  id="R" stroke="#706" fill="none" stroke-width="3" width="300" height="300" x="20" y="100" />
</defs>
<rect width="100%" height="100%" fill="#888"/>
 
<text x="100" y="30" font-size="35px" font-family="Impact" fill="#706">Triangulized warp based on mouse position</text>
</svg>

